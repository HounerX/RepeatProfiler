#
cor = cor.test(current_cvs_samples[,r], current_cvs_samples[,c], methods = c('spearman'))$estimate
if(is.na(cor)){
cor = 0
}
if(r!=c){
if(!(identical(group_col,thegroup))){
print(paste(group_row,"x",group_col,sep = " "))
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
comparison_counter=comparison_counter+1
rowcounter=rowcounter+1
df[rowcounter,which(all_corr$groups==groupsxothers[x])]<-cor
}
}
}
}
}
}
print(comparison_counter)
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]/comparison_counter
}
## end of cross correlation analysis
print(name_full)
plot_title<-paste(name_full,"corrbarplot.pdf",sep = "_")
pdf(plot_title,width = 15)
boxplot(df,na.rm=TRUE,main=name_full,
xlab="Group Comparision made",ylab="correlation value",col = "orange",border = "brown")
dev.off()
}else{
cat('Correlation analysis and plot for one of the refrences couldnt be done because  there is only 1 sample with non-zero depth values for this reference .\n', file = "R_all_correlation_errors.txt",append = TRUE)
print('Correlation analysis and plot for one of the refrences couldnt be done because  there is only 1 sample with non-zero depth values for this reference')
}
print("new loop")
}
#this part is to get the average of each filed where we summed the correlation
for (i in 1:NROW(groups)) {
unique_comparision=0
current_group=groups[i]
print(current_group)
for (r in 1:NROW(which(user_supplied$Group==current_group))) {
for (c in r:NROW(which(user_supplied$Group==current_group))) {
if(r != c){
unique_comparision=unique_comparision+1
}
}
}
print(unique_comparision)
all_corr[which(all_corr$groups==current_group),2:NCOL(all_corr)]<- all_corr[which(all_corr$groups==current_group),2:NCOL(all_corr)]/unique_comparision
}
}else{
cat('Correlation analysis cannot be done with only one pair of reads or a single unpaired read or a single refrence with 1 pair of read or a single unpaired read. \n',  file = "R_all_correlation_errors.txt",append = TRUE)
print('Correlation analysis cannot be done with only one pair of reads or a single unpaired read.')
}
all_corr[is.na(all_corr)] <- "No correlation coefficient calculated due to lack of enough samples"
write.csv(all_corr,"full_correlation_analysis.csv",row.names = FALSE)
print("Full correlation analysis finished")
print("Full correlation analysis is starting")
multmerge = function(mypath){
filenames = list.files(path = mypath, full.names = TRUE)
datalist = lapply(filenames, function(x){read.csv(file = x, header = T)})
Reduce(function(x,y) {merge(x, y, all = TRUE)}, datalist)
}
all_depth_cvs = multmerge('all_depth_cvs')
user_supplied <- read.table('user_provided.txt', header = TRUE, stringsAsFactors = FALSE)
#this code is to intalize the all_corr table
all_corr<-data.frame(groups=as.character(),stringsAsFactors = FALSE)
groups<-unique(user_supplied$Group)
groupsxothers=paste(groups,"xOthers",sep = "")#doing cross group correlation
allgroups=append(groups, groupsxothers, after = length(groups)) #append vector group  witht the x others vector
all_corr<-cbind(allgroups,all_corr$groups)
all_corr<-as.data.frame(all_corr)
names(all_corr)[names(all_corr) == 'allgroups'] <- "groups"
number_of_samples=NROW(user_supplied)
#
if(NCOL(all_depth_cvs) > 2){
all_depth_cvs <- all_depth_cvs[,-1] #remove position column
intial_col=NCOL(all_depth_cvs)
#the loop starts here
while(NCOL(all_depth_cvs)>0){
current_cvs_samples<-all_depth_cvs[,1:number_of_samples]
current_cvs_samples<- na.omit(current_cvs_samples) #this deletes  NA values caused by other refrences positions
current_cvs_samples <- current_cvs_samples[, colSums(current_cvs_samples != 0) > 0] #remove columns containing only zeroes
all_depth_cvs<- all_depth_cvs[,-(1:number_of_samples)]
df <- data.frame(matrix(ncol = NROW(allgroups), nrow = 0)) #THIS INTALIZE THE TABLE TO PRODUCE BOX PLOTS
colnames(df) <- allgroups
rowcounter=0
#check if at least 2 columns remain
if(NCOL(current_cvs_samples) > 1){
for (r in 1:NCOL(current_cvs_samples)) {
for (c in r:NCOL(current_cvs_samples)) {
#this is to get the number of groups
all_names <- colnames(current_cvs_samples)
name_row <- all_names[r]
name_row <- strsplit(name_row, '_')
name_row <- name_row[[1]]
name_row <- as.numeric(name_row[length(name_row)])
group_row = user_supplied[name_row,'Group']
name_col <- all_names[c]
name_col <- strsplit(name_col, '_')
name_col <- name_col[[1]]
name_col <- as.numeric(name_col[length(name_col)])
group_col = user_supplied[name_col,'Group']
#
#in this block the code will find the name of the refrence
name_full<-all_names[r]
name_full<-strsplit(name_full,"_")
name_full<-name_full[[1]]
name_full<-name_full[1:length(name_full)-1]
name_full=paste(name_full,collapse="_")
name_full<-strsplit(name_full,".",fixed = TRUE)
name_full<-name_full[[1]]
name_full <- name_full[name_full != "fasta"]
name_full <- name_full[name_full != "fa"]
name_full <- name_full[name_full != "txt"]
name_full=paste(name_full,collapse=".")
#
if(!(any(colnames(all_corr) == name_full)))  {
all_corr$place_holder<-0
names(all_corr)[names(all_corr) == 'place_holder'] <- name_full
}
cor = cor.test(current_cvs_samples[,r], current_cvs_samples[,c], methods = c('spearman'))$estimate
if(is.na(cor)){
cor = 0
}
if(identical(group_col,group_row)){
if (r!=c){
print(group_col)
all_corr[which(all_corr$groups==group_row),name_full]=all_corr[which(all_corr$groups==group_row),name_full]+cor
rowcounter=rowcounter+1
df[rowcounter,which(all_corr$groups==group_row)]<-cor
}
}
} # end of for loop for column
} # end of row loop
#start for cross correlation analysis
print("start coss corr")
for (x in 1:NROW(groupsxothers)){
thegroup=strsplit(groupsxothers[x],"x",fixed = TRUE)
thegroup<-thegroup[[1]]
thegroup<-thegroup[1:length(thegroup)-1]
thegroup=paste(thegroup,collapse="x")
print(groupsxothers[x])
comparison_counter=0
if(NCOL(current_cvs_samples) > 1){
for (r in 1:NCOL(current_cvs_samples)) {
all_names <- colnames(current_cvs_samples)
name_row <- all_names[r]
name_row <- strsplit(name_row, '_')
name_row <- name_row[[1]]
name_row <- as.numeric(name_row[length(name_row)])
group_row = user_supplied[name_row,'Group']
if(identical(group_row,thegroup)){
print("new sample")
for (c in 1:NCOL(current_cvs_samples)) {
#this is to get the number of groups
all_names <- colnames(current_cvs_samples)
name_row <- all_names[r]
name_row <- strsplit(name_row, '_')
name_row <- name_row[[1]]
name_row <- as.numeric(name_row[length(name_row)])
group_row = user_supplied[name_row,'Group']
name_col <- all_names[c]
name_col <- strsplit(name_col, '_')
name_col <- name_col[[1]]
name_col <- as.numeric(name_col[length(name_col)])
group_col = user_supplied[name_col,'Group']
#
#in this block the code will find the name of the refrence
name_full<-all_names[r]
name_full<-strsplit(name_full,"_")
name_full<-name_full[[1]]
name_full<-name_full[1:length(name_full)-1]
name_full=paste(name_full,collapse="_")
name_full<-strsplit(name_full,".",fixed = TRUE)
name_full<-name_full[[1]]
name_full <- name_full[name_full != "fasta"]
name_full <- name_full[name_full != "fa"]
name_full <- name_full[name_full != "txt"]
name_full=paste(name_full,collapse=".")
#
cor = cor.test(current_cvs_samples[,r], current_cvs_samples[,c], methods = c('spearman'))$estimate
if(is.na(cor)){
cor = 0
}
if(r!=c){
if(!(identical(group_col,thegroup))){
print(paste(group_row,"x",group_col,sep = " "))
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
comparison_counter=comparison_counter+1
rowcounter=rowcounter+1
df[rowcounter,which(all_corr$groups==groupsxothers[x])]<-cor
}
}
}
}
}
}
print(comparison_counter)
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]/comparison_counter
}
## end of cross correlation analysis
print(name_full)
plot_title<-paste(name_full,"corrbarplot.pdf",sep = "_")
pdf(plot_title,width = 15)
boxplot(df,na.rm=TRUE,main=name_full,
xlab="Group Comparision made",ylab="correlation value",col = "orange",border = "brown")
dev.off()
}else{
cat('Correlation analysis and plot for one of the refrences couldnt be done because  there is only 1 sample with non-zero depth values for this reference .\n', file = "R_all_correlation_errors.txt",append = TRUE)
print('Correlation analysis and plot for one of the refrences couldnt be done because  there is only 1 sample with non-zero depth values for this reference')
}
print("new loop")
}
#this part is to get the average of each filed where we summed the correlation
for (i in 1:NROW(groups)) {
unique_comparision=0
current_group=groups[i]
print(current_group)
for (r in 1:NROW(which(user_supplied$Group==current_group))) {
for (c in r:NROW(which(user_supplied$Group==current_group))) {
if(r != c){
unique_comparision=unique_comparision+1
}
}
}
print(unique_comparision)
all_corr[which(all_corr$groups==current_group),2:NCOL(all_corr)]<- all_corr[which(all_corr$groups==current_group),2:NCOL(all_corr)]/unique_comparision
}
}else{
cat('Correlation analysis cannot be done with only one pair of reads or a single unpaired read or a single refrence with 1 pair of read or a single unpaired read. \n',  file = "R_all_correlation_errors.txt",append = TRUE)
print('Correlation analysis cannot be done with only one pair of reads or a single unpaired read.')
}
all_corr[is.na(all_corr)] <- "No correlation coefficient calculated due to lack of enough samples"
write.csv(all_corr,"full_correlation_analysis.csv",row.names = FALSE)
print("Full correlation analysis finished")
#start for cross correlation analysis
print("start coss corr")
for (x in 1:NROW(groupsxothers)){
thegroup=strsplit(groupsxothers[x],"x",fixed = TRUE)
thegroup<-thegroup[[1]]
thegroup<-thegroup[1:length(thegroup)-1]
thegroup=paste(thegroup,collapse="x")
print(groupsxothers[x])
comparison_counter=0
if(NCOL(current_cvs_samples) > 1){
for (r in 1:NCOL(current_cvs_samples)) {
all_names <- colnames(current_cvs_samples)
name_row <- all_names[r]
name_row <- strsplit(name_row, '_')
name_row <- name_row[[1]]
name_row <- as.numeric(name_row[length(name_row)])
group_row = user_supplied[name_row,'Group']
if(identical(group_row,thegroup)){
print("new sample")
for (c in 1:NCOL(current_cvs_samples)) {
#this is to get the number of groups
all_names <- colnames(current_cvs_samples)
name_row <- all_names[r]
name_row <- strsplit(name_row, '_')
name_row <- name_row[[1]]
name_row <- as.numeric(name_row[length(name_row)])
group_row = user_supplied[name_row,'Group']
name_col <- all_names[c]
name_col <- strsplit(name_col, '_')
name_col <- name_col[[1]]
name_col <- as.numeric(name_col[length(name_col)])
group_col = user_supplied[name_col,'Group']
#
#in this block the code will find the name of the refrence
name_full<-all_names[r]
name_full<-strsplit(name_full,"_")
name_full<-name_full[[1]]
name_full<-name_full[1:length(name_full)-1]
name_full=paste(name_full,collapse="_")
name_full<-strsplit(name_full,".",fixed = TRUE)
name_full<-name_full[[1]]
name_full <- name_full[name_full != "fasta"]
name_full <- name_full[name_full != "fa"]
name_full <- name_full[name_full != "txt"]
name_full=paste(name_full,collapse=".")
#
cor = cor.test(current_cvs_samples[,r], current_cvs_samples[,c], methods = c('spearman'))$estimate
if(is.na(cor)){
cor = 0
}
if(r!=c){
if(!(identical(group_col,thegroup))){
print(paste(group_row,"x",group_col,sep = " "))
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
comparison_counter=comparison_counter+1
rowcounter=rowcounter+1
df[rowcounter,which(all_corr$groups==groupsxothers[x])]<-cor
}
}
}
}
}
}
print(comparison_counter)
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]/comparison_counter
}
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
cor = cor.test(current_cvs_samples[,r], current_cvs_samples[,c], methods = c('spearman'))$estimate
View(current_cvs_samples)
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]
print("Full correlation analysis is starting")
multmerge = function(mypath){
filenames = list.files(path = mypath, full.names = TRUE)
datalist = lapply(filenames, function(x){read.csv(file = x, header = T)})
Reduce(function(x,y) {merge(x, y, all = TRUE)}, datalist)
}
all_depth_cvs = multmerge('all_depth_cvs')
user_supplied <- read.table('user_provided.txt', header = TRUE, stringsAsFactors = FALSE)
#this code is to intalize the all_corr table
all_corr<-data.frame(groups=as.character(),stringsAsFactors = FALSE)
groups<-unique(user_supplied$Group)
groupsxothers=paste(groups,"xOthers",sep = "")#doing cross group correlation
allgroups=append(groups, groupsxothers, after = length(groups)) #append vector group  witht the x others vector
all_corr<-cbind(allgroups,all_corr$groups)
all_corr<-as.data.frame(all_corr)
names(all_corr)[names(all_corr) == 'allgroups'] <- "groups"
number_of_samples=NROW(user_supplied)
View(all_corr)
#this is to get the number of groups
all_names <- colnames(current_cvs_samples)
name_row <- all_names[r]
name_row <- strsplit(name_row, '_')
name_row <- name_row[[1]]
name_row <- as.numeric(name_row[length(name_row)])
group_row = user_supplied[name_row,'Group']
name_col <- all_names[c]
name_col <- strsplit(name_col, '_')
name_col <- name_col[[1]]
name_col <- as.numeric(name_col[length(name_col)])
group_col = user_supplied[name_col,'Group']
#
#in this block the code will find the name of the refrence
name_full<-all_names[r]
name_full<-strsplit(name_full,"_")
name_full<-name_full[[1]]
name_full<-name_full[1:length(name_full)-1]
name_full=paste(name_full,collapse="_")
name_full<-strsplit(name_full,".",fixed = TRUE)
name_full<-name_full[[1]]
name_full <- name_full[name_full != "fasta"]
name_full <- name_full[name_full != "fa"]
name_full <- name_full[name_full != "txt"]
name_full=paste(name_full,collapse=".")
#
if(!(any(colnames(all_corr) == name_full)))  {
all_corr$place_holder<-0
names(all_corr)[names(all_corr) == 'place_holder'] <- name_full
}
View(current_cvs_samples)
#start for cross correlation analysis
print("start coss corr")
for (x in 1:NROW(groupsxothers)){
thegroup=strsplit(groupsxothers[x],"x",fixed = TRUE)
thegroup<-thegroup[[1]]
thegroup<-thegroup[1:length(thegroup)-1]
thegroup=paste(thegroup,collapse="x")
print(groupsxothers[x])
comparison_counter=0
if(NCOL(current_cvs_samples) > 1){
for (r in 1:NCOL(current_cvs_samples)) {
all_names <- colnames(current_cvs_samples)
name_row <- all_names[r]
name_row <- strsplit(name_row, '_')
name_row <- name_row[[1]]
name_row <- as.numeric(name_row[length(name_row)])
group_row = user_supplied[name_row,'Group']
if(identical(group_row,thegroup)){
print("new sample")
for (c in 1:NCOL(current_cvs_samples)) {
#this is to get the number of groups
all_names <- colnames(current_cvs_samples)
name_row <- all_names[r]
name_row <- strsplit(name_row, '_')
name_row <- name_row[[1]]
name_row <- as.numeric(name_row[length(name_row)])
group_row = user_supplied[name_row,'Group']
name_col <- all_names[c]
name_col <- strsplit(name_col, '_')
name_col <- name_col[[1]]
name_col <- as.numeric(name_col[length(name_col)])
group_col = user_supplied[name_col,'Group']
#
#in this block the code will find the name of the refrence
name_full<-all_names[r]
name_full<-strsplit(name_full,"_")
name_full<-name_full[[1]]
name_full<-name_full[1:length(name_full)-1]
name_full=paste(name_full,collapse="_")
name_full<-strsplit(name_full,".",fixed = TRUE)
name_full<-name_full[[1]]
name_full <- name_full[name_full != "fasta"]
name_full <- name_full[name_full != "fa"]
name_full <- name_full[name_full != "txt"]
name_full=paste(name_full,collapse=".")
#
cor = cor.test(current_cvs_samples[,r], current_cvs_samples[,c], methods = c('spearman'))$estimate
if(is.na(cor)){
cor = 0
}
if(r!=c){
if(!(identical(group_col,thegroup))){
print(paste(group_row,"x",group_col,sep = " "))
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]+cor
comparison_counter=comparison_counter+1
rowcounter=rowcounter+1
df[rowcounter,which(all_corr$groups==groupsxothers[x])]<-cor
}
}
}
}
}
}
print(comparison_counter)
all_corr[which(all_corr$groups==groupsxothers[x]),name_full]=all_corr[which(all_corr$groups==groupsxothers[x]),name_full]/comparison_counter
}
## end of cross correlation analysis
if(identical(group_row,thegroup)){
print("new sample")
sknklcsamck
;lxm;lk
multmerge <- function(mypath){
filenames <- list.files(path = mypath, full.names = TRUE)
datalist <- lapply(filenames, function(x){read.csv(file = x, header = T)})
Reduce(function(x,y) {merge(x, y, all = TRUE)}, datalist)
}
all.depth <- multmerge('single_cvs')
The.summary <- read.table('The_summary.txt', header = TRUE, stringsAsFactors = FALSE)
#initialize data frame
The.summary$Ref.Length <- NA
The.summary$Average.coverage <- NA
The.summary$Average.coverage <- NA
The.summary$max.coverage <- NA
index.for.summary <- 1
#loop to fill in initialized  data
for(i in 2:ncol(all.depth)){
v <- as.vector(all.depth[,i])
#reference length
ref.length <- sum(!is.na(v))
The.summary[index.for.summary,7] <- ref.length
#average coverage
sum.coverage <- sum(as.numeric(v), na.rm = TRUE)
average.coverage <- sum.coverage/as.numeric(The.summary[index.for.summary,7])
The.summary[index.for.summary,8] <- average.coverage
#max coverage
maximum <- max(v, na.rm = TRUE)
The.summary[index.for.summary,9] <- maximum
index.for.summary <- index.for.summary+1
}
#handles single reads
if(all(The.summary$Read1 == The.summary$Read2)){
The.summary$Read2<-NULL
names(The.summary)[names(The.summary) == 'Read1'] <- 'Read'
}
write.csv(The.summary, file = 'The_summary_final.csv', row.names = FALSE)
View(The.summary)
multmerge <- function(mypath){
filenames <- list.files(path = mypath, full.names = TRUE)
datalist <- lapply(filenames, function(x){read.csv(file = x, header = T)})
Reduce(function(x,y) {merge(x, y, all = TRUE)}, datalist)
}
all.depth <- multmerge('single_cvs')
The.summary <- read.table('The_summary.txt', header = TRUE, stringsAsFactors = FALSE)
#initialize data frame
The.summary$Ref.Length <- NA
The.summary$Average.coverage <- NA
The.summary$Average.coverage <- NA
The.summary$max.coverage <- NA
index.for.summary <- 1
#loop to fill in initialized  data
for(i in 2:ncol(all.depth)){
v <- as.vector(all.depth[,i])
#reference length
ref.length <- sum(!is.na(v))
The.summary[index.for.summary,7] <- ref.length
#average coverage
sum.coverage <- sum(as.numeric(v), na.rm = TRUE)
average.coverage <- sum.coverage/as.numeric(The.summary[index.for.summary,7])
The.summary[index.for.summary,8] <- average.coverage
#max coverage
maximum <- max(v, na.rm = TRUE)
The.summary[index.for.summary,9] <- maximum
index.for.summary <- index.for.summary+1
}
#handles single reads
if(all(The.summary$Read1 == The.summary$Read2)){
The.summary$Read2<-NULL
names(The.summary)[names(The.summary) == 'Read1'] <- 'Read'
}
write.csv(The.summary, file = 'The_summary_final.csv', row.names = FALSE)
View(The.summary)
mean(The.summary$Average.coverage)
View(all.depth)
all.depth$Position/2
all.depth$Position<-all.depth$Position/2
all.depth$Position/NA
all.depth$Position/NA
all.depth$Position<-all.depth$Position/2
all.depth$Position/NA
all.depth$Position<-all.depth$Position/2
all.depth$Position/NA
all.depth$Position<-all.depth$Position/2
all.depth$Position<-all.depth$Position/2
all.depth$Position<-all.depth$Position/2
